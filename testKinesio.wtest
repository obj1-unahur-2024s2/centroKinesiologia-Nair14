import pacientes.*
import aparatos.*


describe "test de kinesio" {
  const leonardo = new Paciente(edad=40, nivelDeDolor=10, fortalezaMuscular=20)
  const milena = new Paciente(edad=3, nivelDeDolor=30, fortalezaMuscular=50)
  const nicolas = new Resistente(edad=40, nivelDeDolor=10, fortalezaMuscular=20)
  const victoria = new Caprichoso(edad=30, nivelDeDolor=10, fortalezaMuscular=40)
  const julian = new Caprichoso(edad=20, nivelDeDolor=54, fortalezaMuscular=50)
  const zoe = new RecuperacionRapida(edad=50, nivelDeDolor=14, fortalezaMuscular=40)
  
  const magneto1 = new Magneto()
  const bici1 = new Bicicleta()
  const minitramp1 = new Minitramp()
  const magneto2 = new Magneto(color = "verde")
  const bici2 = new Bicicleta(color = "rojo")

  method initialize(){
    leonardo.cargarRutina([bici1,minitramp1,bici1,magneto1])
    nicolas.cargarRutina([bici1,minitramp1,bici1,magneto1])
    victoria.cargarRutina([bici1,minitramp1,bici1,magneto1])
    julian.cargarRutina([bici2, magneto2,bici1])
    zoe.cargarRutina([bici1,minitramp1,bici1,magneto1])
    milena.cargarRutina([magneto1,bici1])
  }

  test "Leonardo Puede usar los tres aparatos" {
    assert.that(leonardo.puedeUsar(magneto1))
    assert.that(leonardo.puedeUsar(bici1))
    assert.that(leonardo.puedeUsar(minitramp1))
  }
  test "Leonardo despues de usar el magneto una vez, el nivel de dolor disminuye a 9"{
    leonardo.usar(magneto1)
    assert.equals(9, leonardo.nivelDeDolor())
  }
  test "Después de usar el magneto una vez, el nivel de dolor de Milena baja a 27" {
    milena.usar(magneto1)
    assert.equals(27, milena.nivelDeDolor())
  }
  test "Después de usar la bicicleta una vez, el nivel de dolor de Leonardo baja a 6, y la fortaleza sube a 23." {
    leonardo.usar(bici1)
    assert.equals(6, leonardo.nivelDeDolor())
    assert.equals(23, leonardo.fortalezaMuscular())
  }
  test "Después de usar el minitramp una vez, la fortaleza de Leonardo sube a 24." {
    leonardo.usar(minitramp1)
    assert.equals(24, leonardo.fortalezaMuscular())
  }
  test "Leonardo puede hacer la rutina que tiene asignada. Después de hacerla una vez, su nivel de dolor baja a 1.8, y su fortaleza sube a 30." {
    assert.that(leonardo.puedeHacerRutina())
  }
  test "Leonardo puede hacer rutina asignada" {
      
    leonardo.realizarRutina()

    assert.equals(1.8, leonardo.nivelDeDolor())
    assert.equals(30, leonardo.fortalezaMuscular())
  }
  test "Milena no puede hacer la rutina que tiene asignada" {
    assert.notThat(milena.puedeHacerRutina())
  }
  test "Nicolás puede hacer la rutina que tiene asignada." {
    assert.that(nicolas.puedeHacerRutina())
  }
  test "Después de hacerla una vez, su nivel de dolor baja a 1.8, y su fortaleza sube a 34." {
    nicolas.realizarRutina()

    assert.equals(1.8, nicolas.nivelDeDolor())
    assert.equals(34, nicolas.fortalezaMuscular())
  }
  test "Victoria no puede hacer la rutina que tiene asignada." {
    assert.notThat(victoria.puedeHacerRutina())
  }
  test "Julián puede hacer la rutina que tiene asignada." {
    assert.that(julian.puedeHacerRutina())
  }
  test "Después de hacerla una vez, su nivel de dolor baja a 29.3, y su fortaleza sube a 62." {
    julian.realizarRutina()

    assert.equals(29.3, julian.nivelDeDolor())
    assert.equals(62, julian.fortalezaMuscular())
  }
  test "Zoe puede hacer la rutina que tiene asignada." {
    assert.that(zoe.puedeHacerRutina())
  }
  test "Después de asignar a 2 el valor de decremento de dolor para pacientes de rápida recuperación, y de que Zoe haga su rutinauna vez, su nivel de dolor baja a 3.4, y su fortaleza sube a 51." {
    disminucionDolor.valor(2)
    zoe.realizarRutina()

    assert.equals(3.4, zoe.nivelDeDolor())
    assert.equals(51, zoe.fortalezaMuscular())
  }
}